---
interface Address { street: string; postalCode: string; city: string }
const { data } = Astro.props as {
  data: { phone: string; phoneCompact: string; email: string; siret: string; address: Address }
};

const addressFull = `${data.address.street}, ${data.address.postalCode} ${data.address.city}`;
const mapsHref = `https://maps.google.com/?q=${encodeURIComponent(addressFull)}`;
---

<section id="contact" class="relative bg-white scroll-mt-24">
  <!-- déco discrète -->
  <div class="pointer-events-none absolute inset-x-0 top-0 -z-10 h-28 bg-gradient-to-b from-emerald-100/60 to-transparent opacity-70"></div>

  <div class="mx-auto max-w-6xl px-6 py-16">
    <header class="mb-10">
      <h2 class="text-2xl font-bold tracking-tight md:text-3xl">Contact</h2>
      <p class="mt-2 text-gray-600">Réponse rapide 9h–22h. Vous pouvez aussi nous appeler directement.</p>
    </header>

    <div class="grid gap-8 md:grid-cols-2">
      <!-- Carte coordonnées -->
      <aside
        class="contact-card reveal group relative overflow-hidden rounded-2xl bg-gray-50 p-6 ring-1 ring-gray-200 transition duration-300 hover:shadow-xl"
        style="--delay:0ms"
      >
        <!-- bordure gradient -->
        <div class="pointer-events-none absolute inset-0 rounded-2xl opacity-0 transition-opacity duration-300 group-hover:opacity-100"
             style="mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                    -webkit-mask-composite: xor; mask-composite: exclude; padding:1px;
                    background:linear-gradient(120deg, rgba(16,185,129,.45), rgba(16,185,129,.12), rgba(16,185,129,.45));"></div>
        <!-- spotlight -->
        <div class="pointer-events-none absolute inset-0 opacity-0 transition-opacity duration-300 group-hover:opacity-100"
             style="background: radial-gradient(360px circle at var(--x,50%) var(--y,50%), rgba(16,185,129,.08), transparent 40%);"></div>

        <h3 class="relative z-10 font-semibold">Coordonnées</h3>
        <ul class="relative z-10 mt-4 space-y-3 text-sm text-gray-700">
          <!-- Tél -->
          <li class="flex items-center justify-between gap-3 rounded-xl bg-white/60 px-3 py-2 ring-1 ring-gray-200">
            <div class="flex min-w-0 items-center gap-2">
              <svg class="h-4 w-4 text-emerald-700" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M2.25 3.75A1.5 1.5 0 013.75 2.25h2.77c.63 0 1.2.4 1.4.98l.99 2.85c.18.52.05 1.1-.34 1.5l-1.7 1.7a16.76 16.76 0 007.12 7.12l1.7-1.7c.4-.39.98-.52 1.5-.34l2.85.99c.58.2.98.77.98 1.4v2.77a1.5 1.5 0 01-1.5 1.5H18c-8.56 0-15.5-6.94-15.5-15.5v-1.5z"/></svg>
              <a class="truncate font-medium text-emerald-700 hover:underline" href={`tel:${data.phoneCompact}`}>{data.phone}</a>
            </div>
            <div class="flex shrink-0 items-center gap-2">
              <a href={`tel:${data.phoneCompact}`} class="rounded-lg bg-emerald-600 px-2 py-1 text-xs font-semibold text-white hover:bg-emerald-700">Appeler</a>
              <button type="button" class="copy rounded-lg px-2 py-1 text-xs font-semibold text-gray-700 ring-1 ring-gray-300 hover:bg-gray-100" data-copy={data.phone}>Copier</button>
            </div>
          </li>

          <!-- Email -->
          <li class="flex items-center justify-between gap-3 rounded-xl bg-white/60 px-3 py-2 ring-1 ring-gray-200">
            <div class="flex min-w-0 items-center gap-2">
              <svg class="h-4 w-4 text-emerald-700" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                <rect x="3" y="5" width="18" height="14" rx="2" stroke="currentColor" stroke-width="2"/><path d="M4 7l8 6 8-6" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
              </svg>
              <a class="truncate hover:underline" href={`mailto:${data.email}`}>{data.email}</a>
            </div>
            <button type="button" class="copy rounded-lg px-2 py-1 text-xs font-semibold text-gray-700 ring-1 ring-gray-300 hover:bg-gray-100" data-copy={data.email}>Copier</button>
          </li>

          <!-- Adresse -->
          <li class="flex items-center justify-between gap-3 rounded-xl bg-white/60 px-3 py-2 ring-1 ring-gray-200">
            <div class="flex min-w-0 items-center gap-2">
              <svg class="h-4 w-4 text-emerald-700" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                <path d="M12 22s7-6.1 7-12a7 7 0 10-14 0c0 5.9 7 12 7 12z" stroke="currentColor" stroke-width="2"/><circle cx="12" cy="10" r="2.5" stroke="currentColor" stroke-width="2"/>
              </svg>
              <span class="truncate">{addressFull}</span>
            </div>
            <div class="flex shrink-0 items-center gap-2">
              <a href={mapsHref} target="_blank" rel="noopener" class="rounded-lg bg-gray-900 px-2 py-1 text-xs font-semibold text-white hover:-translate-y-0.5 hover:shadow">Maps</a>
              <button type="button" class="copy rounded-lg px-2 py-1 text-xs font-semibold text-gray-700 ring-1 ring-gray-300 hover:bg-gray-100" data-copy={addressFull}>Copier</button>
            </div>
          </li>

          <!-- Horaires -->
          <li class="flex items-center gap-2 rounded-xl bg-white/60 px-3 py-2 ring-1 ring-gray-200">
            <svg class="h-4 w-4 text-emerald-700" viewBox="0 0 24 24" fill="none" aria-hidden="true"><circle cx="12" cy="12" r="8" stroke="currentColor" stroke-width="2"/><path d="M12 8v4l3 2" stroke="currentColor" stroke-width="2" stroke-linecap="round"/></svg>
            <span>9h–22h — 7j/7</span>
          </li>

          <!-- SIRET + RC Pro -->
          <li class="flex items-center gap-2 rounded-xl bg-white/60 px-3 py-2 ring-1 ring-gray-200">
            <svg class="h-4 w-4 text-emerald-700" viewBox="0 0 24 24" fill="none" aria-hidden="true"><path d="M7 4h7l4 4v12H7z" stroke="currentColor" stroke-width="2"/><path d="M14 4v4h4" stroke="currentColor" stroke-width="2"/></svg>
            <span>SIRET : {data.siret} • RC Pro assurée</span>
          </li>
        </ul>
      </aside>

      <!-- Formulaire Netlify -->
      <form
        class="form-card reveal group relative overflow-hidden rounded-2xl bg-white p-6 shadow-sm ring-1 ring-gray-200 transition duration-300 hover:shadow-xl"
        method="POST"
        name="contact-epaviste"
        data-netlify="true"
        netlify-honeypot="bot-field"
        style="--delay:120ms"
      >
        <!-- bordure gradient -->
        <div class="pointer-events-none absolute inset-0 rounded-2xl opacity-0 transition-opacity duration-300 group-hover:opacity-100"
             style="mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                    -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                    -webkit-mask-composite: xor; mask-composite: exclude; padding:1px;
                    background:linear-gradient(120deg, rgba(16,185,129,.5), rgba(16,185,129,.12), rgba(16,185,129,.5));"></div>
        <!-- spotlight -->
        <div class="pointer-events-none absolute inset-0 opacity-0 transition-opacity duration-300 group-hover:opacity-100"
             style="background: radial-gradient(360px circle at var(--x,50%) var(--y,50%), rgba(16,185,129,.08), transparent 40%);"></div>

        <!-- Netlify hidden fields -->
        <input type="hidden" name="form-name" value="contact-epaviste" />
        <p class="hidden">
          <label>Ne pas remplir : <input name="bot-field" /></label>
        </p>

        <fieldset class="relative z-10 grid gap-4">
          <label class="block">
            <span class="text-sm font-medium">Nom <span class="text-red-600">*</span></span>
            <input class="mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 placeholder:text-gray-400 focus:border-emerald-600 focus:outline-none focus:ring-2 focus:ring-emerald-200"
                   type="text" name="name" required autocomplete="name" />
          </label>

          <label class="block">
            <span class="text-sm font-medium">Téléphone <span class="text-red-600">*</span></span>
            <input class="mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 placeholder:text-gray-400 focus:border-emerald-600 focus:outline-none focus:ring-2 focus:ring-emerald-200"
                   type="tel" name="phone" required autocomplete="tel" inputmode="tel" />
          </label>

          <label class="block">
            <span class="text-sm font-medium">Email</span>
            <input class="mt-1 w-full rounded-xl border border-gray-300 px-3 py-2 placeholder:text-gray-400 focus:border-emerald-600 focus:outline-none focus:ring-2 focus:ring-emerald-200"
                   type="email" name="email" autocomplete="email" />
          </label>

          <label class="block">
            <span class="text-sm font-medium">Message</span>
            <textarea class="mt-1 min-h-[120px] w-full rounded-xl border border-gray-300 px-3 py-2 placeholder:text-gray-400 focus:border-emerald-600 focus:outline-none focus:ring-2 focus:ring-emerald-200"
                      name="message" placeholder="Décrivez votre véhicule et l’emplacement…" ></textarea>
          </label>

          <button type="submit"
                  class="inline-flex items-center justify-center rounded-2xl bg-emerald-600 px-5 py-3 font-semibold text-white shadow-md transition hover:-translate-y-0.5 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-emerald-500">
            Envoyer la demande
          </button>
        </fieldset>

        <p id="privacy-note" class="relative z-10 mt-3 text-xs text-gray-500">En envoyant ce formulaire, vous acceptez notre politique de confidentialité.</p>
      </form>
    </div>
  </div>
</section>

<style is:global>
/* reveal au scroll + délai via --delay */
.reveal { opacity: 0; transform: translateY(8px); transition: opacity .45s ease, transform .45s ease; transition-delay: var(--delay, 0ms); }
.reveal.is-inview { opacity: 1; transform: translateY(0); }

@media (prefers-reduced-motion: reduce) {
  .reveal { opacity: 1; transform: none; transition: none; }
  .contact-card, .form-card { transition: none !important; }
}
</style>

<script>
  // Reveal au scroll
  const io = new IntersectionObserver((entries) => {
    entries.forEach(e => {
      if (e.isIntersecting) { e.target.classList.add('is-inview'); io.unobserve(e.target); }
    });
  }, { threshold: 0.18 });
  document.querySelectorAll('.reveal').forEach(el => io.observe(el));

  // Spotlight (suit la souris) sur les blocs
  document.querySelectorAll('.contact-card, .form-card').forEach((card) => {
    card.addEventListener('mousemove', (e) => {
      const r = card.getBoundingClientRect();
      const x = ((e.clientX - r.left) / r.width) * 100;
      const y = ((e.clientY - r.top) / r.height) * 100;
      card.style.setProperty('--x', x + '%');
      card.style.setProperty('--y', y + '%');
    });
    card.addEventListener('mouseleave', () => {
      card.style.removeProperty('--x'); card.style.removeProperty('--y');
    });
  });

  // Boutons "Copier"
  document.querySelectorAll('.copy').forEach((btn) => {
    btn.addEventListener('click', async () => {
      const text = btn.getAttribute('data-copy') || '';
      try {
        await navigator.clipboard.writeText(text);
        btn.classList.add('ring-2','ring-emerald-500');
        btn.textContent = 'Copié ✓';
        setTimeout(() => { btn.classList.remove('ring-2','ring-emerald-500'); btn.textContent = 'Copier'; }, 900);
      } catch {}
    });
  });
</script>
