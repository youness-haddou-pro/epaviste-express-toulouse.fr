---
// src/components/BlogCard.astro
import { Picture } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

const { post } = Astro.props as { post: CollectionEntry<'blog'> };

const href = `/blog/${post.slug}/`;
const img = post.data.heroImage; // Image locale (ImageMetadata depuis la collection)
const alt = post.data.heroAlt ?? post.data.title ?? '';

/** Tailles & largeurs adaptées à une carte de blog */
const widths = [320, 480, 640, 768, 960, 1200];
const sizes =
  '(max-width: 768px) 100vw, (max-width: 1280px) 50vw, 640px';
---

<article class="group rounded-2xl border border-zinc-200/70 p-4 hover:shadow-md transition">
  <a href={href} class="block">
    {img && (
      <Picture
        src={img}
        alt={alt}
        widths={widths}
        sizes={sizes}
        formats={['avif', 'webp']}  /* + fallback auto (format d’origine) */
        loading="lazy"
        decoding="async"
        class="mb-3 aspect-[16/9] w-full rounded-xl object-cover"
      />
    )}

    <h3 class="text-lg font-semibold leading-snug group-hover:underline">
      {post.data.title}
    </h3>

    <p class="mt-1 text-sm text-zinc-600 line-clamp-2">
      {post.data.description}
    </p>

    <div class="mt-3 flex items-center gap-3 text-xs text-zinc-500">
      <time datetime={post.data.date.toISOString()}>
        {post.data.date.toLocaleDateString('fr-FR')}
      </time>
      {post.data.ville && <span>• {post.data.ville}</span>}
      {post.data.readingTime && <span>• {post.data.readingTime}</span>}
    </div>
  </a>
</article>
